@page "/"
@using EcoTrails.Client.State
@using EcoTrails.ComponentLibrary.Map
@inject IMediator Mediator
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AppState AppState
@implements IDisposable


<PageTitle>Blazing Trails</PageTitle>

@if (_trails == null)
{
    <p>Loading trails...</p>
}
else
{
    <TrailDetails Trail="_selectedTrail" />

    <TrailSearch />

    @if (_trails.Any())
    {
        <AuthorizeView>
            <Authorized>
	            <div class="mb-4">
		            <p class="font-italic text-center">Do you have an awesome trail you'd like to share? <a href="add-trail">Add it here</a>.</p>
	            </div>
            </Authorized>
            <NotAuthorized>
                <div class="mb-4">
                    <p class="font-italic text-center">Do you have an awesome trail you'd like to share? Please <a href="authentication/login">log in or sign up</a>.</p>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <div clas="mb-3" style="text-align:end">
	        <p>
		        <span class="font-weight-bold">@AppState.FavoriteTrailsState.FavoriteTrails.Count</span>
		        <a href="/favorite-trails">favorite trails</a>
	        </p>
        </div>
        <ViewSwitcher Items="_trails" Context="trailCtx">
	        <GridTemplate>
		        <TrailCard Trail="trailCtx" OnSelected="HandleTrailSelected" />
	        </GridTemplate>
	        <HeaderTemplate>
		        <th>Name</th>
		        <th>Location</th>
		        <th>Length</th>
		        <th>Time</th>
		        <th></th>
	        </HeaderTemplate>
	        <RowTemplate>
		        <th scope="col">@trailCtx.Name</th>
		        <td>@trailCtx.Location</td>
		        <td>@(trailCtx.Length)km</td>
		        <td>@trailCtx.TimeFormatted</td>
		        <td class="text-right">
			        <button @onclick="@(() => HandleTrailSelected(trailCtx))" title="View" class="btn btn-primary">
				        <i class="bi bi-binoculars"></i>
			        </button>
			        <FavoriteButton Trail="trailCtx" />
			        <AuthorizeView>
				        @if (trailCtx.Owner.Equals(context.User.Identity?.Name, StringComparison.OrdinalIgnoreCase) ||
				             context.User.IsInRole("Administrator"))
				        {
					        <button @onclick="@(() => NavManager.NavigateTo($"/edit-trail/{trailCtx.Id}"))" title="Edit" class="btn btn-outline-secondary">
						        <i class="bi bi-pencil"></i>
					        </button>
				        }
			        </AuthorizeView>
		        </td>
	        </RowTemplate>
        </ViewSwitcher>
    }
    else
    {
	    <NoTrails>
		    We currently don't have any trails, <a href="add-trail">why not add one?</a>
	    </NoTrails>
    }
}

@code {
    private IEnumerable<Trail>? _trails;
    private Trail? _selectedTrail;

    protected override void OnInitialized()
	    => AppState.FavoriteTrailsState.OnChange += StateHasChanged;

    void IDisposable.Dispose()
	    => AppState.FavoriteTrailsState.OnChange -= StateHasChanged;

    protected override async Task OnInitializedAsync()
    {
	    try
        {
            var response = await Mediator.Send(new GetTrailsRequest());
            _trails = response.Trails.Select(x => new Trail
            {
                Id = x.Id,
                Name = x.Name,
                Image = x.Image,
                Description = x.Description,
                Owner = x.Owner,
                Location = x.Location,
                Length = x.Length,
                TimeInMinutes = x.TimeInMinutes,
                Waypoints = x.Waypoints.Select(wp => new LatLong(wp.Latitude, wp.Longitude)).ToList(),
                Route = x.RouteInstructions.Select(r => new RouteInstruction()
                {
                    Stage = r.Stage,
                    Description = r.Description
                })
            });
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }

    private void HandleTrailSelected(Trail trail) 
        => _selectedTrail = trail;
}